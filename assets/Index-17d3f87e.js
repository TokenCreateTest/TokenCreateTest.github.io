import{D as G}from"./Dialog-6eb3e45f.js";import{d as X,f as j,b as q,g as F,B as z,r as S,o as I,k as J,l as h,w as E,u as Q,n as o,C as P,D as y,E as W,a as p,t as v,c as D,v as Y}from"./index-7d08b02b.js";import{E as M,M as Z}from"./ERC20ABI-8ebaa2cb.js";import{u as ee}from"./create-03e83357.js";import{_ as ae}from"./SvgIcon-bf5fd164.js";import{B as l}from"./bignumber-3e8dfdf6.js";import{f as $,p as b}from"./units-a122e513.js";/* empty css                                                       */const te={class:"van-dialog__header"},se={class:"van-dialog__content"},oe={class:"van-dialog__message van-dialog__message--has-title"},ne={style:{paddingTop:"20px"}},le={class:"create-success-title"},re={class:"create-success-text"},ie={class:"create-success-text"},Fe={__name:"Index",setup(de){const{t:s}=X(),R=j(),i=q(),e=ee(),C=F(!1),_=F(!1),x=F(!1),T=F(!1),N=F(!1),B=F(!1),g=F(""),A=F("");async function U(){T.value=!0;try{const d=await new P(window.ethereum).getSigner();let c=await new y(i.tokenFactoryAddress,W,d).baseFeeToken();console.log("baseFeeTokenAddress",c),(await(await new y(c,M,d).approve(i.tokenFactoryAddress,Z)).wait()).status===1&&(o({type:"success",message:s("upChainSuccessfully")}),x.value=!1)}catch(a){console.log(a),a.info&&a.info.error&&a.info.error.code===4001?o(s("userCancelOperate")):a.error&&a.error.message&&a.error.message=="Canceled"?o(s("userCancelOperate")):o(s("unkonwError"))}finally{T.value=!1}}async function O(){console.log("createTokenClick");const a=/^0x[0-9a-fA-F]{40}(,\d*\.?\d+)?$/;if(i.chainId==-1){i.netErrorDialogShow=!0;return}if(e.deployerId===0||e.deployerId===1||e.deployerId===2){if(!e.name){o(s("pleaseEnterName"));return}if(!e.symbol){o(s("pleaseEnterSymbol"));return}if(!e.totalSupply){o(s("pleaseEnterTotal"));return}}if(e.deployerId===1||e.deployerId==2){if(!e.token){o(s("pleaseSelectCurrency"));return}if(!e.chainSwap){o(s("pleaseSelectSwap"));return}if(e.deployerId===1){if(l(e.buyFundFee).plus(e.buyBurnFee).plus(e.buyLPFee).plus(e.sellFundFee).plus(e.sellBurnFee).plus(e.sellLPFee).lte(0)){o(s("taxMustGt0"));return}}else if(e.deployerId===2){if(l(e.buyFundFee).plus(e.buyLPFee).plus(e.sellFundFee).plus(e.sellLPFee).lte(0)){o(s("taxlimit2"));return}}else if(e.deployerId===3){if(!e.rewardToken){o(s("dividendTokenError"));return}if(!a.test(e.rewardToken)){o(s("pleaseEnterTrueAddress"));return}if(l(e.buyFundFee).plus(e.buyLPFee).plus(e.buyRewardFee).plus(e.sellFundFee).plus(e.sellLPFee).plus(e.sellRewardFee).lte(0)){o(s("taxMustGt0"));return}}if((Number(e.buyFundFee)>0||Number(e.sellFundFee)>0)&&!e.fundAddress){o(s("pleaseEnterMarketingAddress"));return}if(e.fundAddress&&!a.test(e.fundAddress)){o(s("pleaseEnterTrueAddress"));return}if(e.enableKillBlock&&(!e.killBlock||Number(e.killBlock)<=0)){o(s("pleaseEnterKillBlockNumber"));return}if(e.enableWalletLimit&&(!e.maxWalletAmount||Number(e.maxWalletAmount)<=0)){o(s("pleaseEnterMaxWalletLimit"));return}if(e.enableSwapLimit&&(!e.maxSwapAmount||Number(e.maxSwapAmount)<=0)){o(s("pleaseEnterMaxSwapLimit"));return}}N.value=!0;const f=await new P(window.ethereum).getSigner(),c=new y(i.tokenFactoryAddress,W,f);let w=await c.baseFee();console.log("baseFee",w);let k=await c.baseFeeToken();console.log("baseFeeTokenAddress",k);const m=new y(k,M,f),u=await m.decimals();A.value=await m.symbol(),g.value=$(w,u);const r=await m.allowance(i.walletAddress,i.tokenFactoryAddress);console.log("allowance",r),r<w?x.value=!0:x.value=!1,C.value=!0,N.value=!1}async function K(){B.value=!0;try{const d=await new P(window.ethereum).getSigner(),f=new y(i.tokenFactoryAddress,W,d);let c=await f.baseFee();console.log("baseFee",c);let w=await f.baseFeeToken();console.log("baseFeeToken",w);const k=new y(w,M,d),m=await k.decimals();A.value=await k.symbol(),g.value=$(c,m);const u=[],r=[],t=[],n=[];e.deployerId==0?(u[0]=e.name,u[1]=e.symbol,t[0]=e.decimals,t[1]=b(e.totalSupply,e.decimals),n[0]=e.canMint):e.deployerId==1?(u[0]=e.name,u[1]=e.symbol,r[0]=e.token.tokenAddress!=="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"?e.token.tokenAddress:i.chainCoinWrappedAddress,r[1]=e.chainSwap.routerAddress,r[2]=i.walletAddress,r[3]=e.fundAddress?e.fundAddress:"0x0000000000000000000000000000000000000000",t[0]=e.decimals,t[1]=b(e.totalSupply,e.decimals),t[2]=l(e.buyFundFee).times(100).toNumber(),t[3]=l(e.buyBurnFee).times(100).toNumber(),t[4]=l(e.buyLPFee).times(100).toNumber(),t[5]=l(e.sellFundFee).times(100).toNumber(),t[6]=l(e.sellBurnFee).times(100).toNumber(),t[7]=l(e.sellLPFee).times(100).toNumber(),t[8]=e.killBlock?l(e.killBlock).toNumber():0,t[9]=e.maxSwapAmount?b(e.maxSwapAmount,e.decimals):0n,t[10]=e.maxWalletAmount?b(e.maxWalletAmount,e.decimals):0n,n[0]=e.canMint,n[1]=e.token.tokenAddress==="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",n[2]=e.enableManualStartTrade,n[3]=e.enableKillBlock,n[4]=e.enableSwapLimit,n[5]=e.enableWalletLimit,n[6]=e.enableChangeTax,n[7]=e.enableWhiteList):e.deployerId==2?(u[0]=e.name,u[1]=e.symbol,r[0]=e.token.tokenAddress!=="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"?e.token.tokenAddress:i.chainCoinWrappedAddress,r[1]=e.chainSwap.routerAddress,r[2]=i.walletAddress,r[3]=e.fundAddress?e.fundAddress:"0x0000000000000000000000000000000000000000",t[0]=e.decimals,t[1]=b(e.totalSupply,e.decimals),t[2]=l(e.buyFundFee).times(100).toNumber(),t[3]=l(e.buyRewardFee).times(100).toNumber(),t[4]=l(e.buyLPFee).times(100).toNumber(),t[5]=l(e.sellFundFee).times(100).toNumber(),t[6]=l(e.sellRewardFee).times(100).toNumber(),t[7]=l(e.sellLPFee).times(100).toNumber(),t[8]=e.killBlock?l(e.killBlock).toNumber():0,t[9]=e.maxSwapAmount?b(e.maxSwapAmount,e.decimals):0n,t[10]=e.maxWalletAmount?b(e.maxWalletAmount,e.decimals):0n,n[0]=e.token.tokenAddress==="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",n[1]=e.enableManualStartTrade,n[2]=e.enableKillBlock,n[3]=e.enableSwapLimit,n[4]=e.enableWalletLimit,n[5]=e.enableChangeTax,n[6]=e.enableWhiteList):e.deployerId==3&&(u[0]=e.name,u[1]=e.symbol,r[0]=e.token.tokenAddress!=="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"?e.token.tokenAddress:i.chainCoinWrappedAddress,r[1]=e.chainSwap.routerAddress,r[2]=i.walletAddress,r[3]=e.fundAddress?e.fundAddress:"0x0000000000000000000000000000000000000000",r[4]=e.rewardToken,t[0]=e.decimals,t[1]=b(e.totalSupply,e.decimals),t[2]=l(e.buyFundFee).times(100).toNumber(),t[3]=l(e.buyRewardFee).times(100).toNumber(),t[4]=l(e.buyLPFee).times(100).toNumber(),t[5]=l(e.sellFundFee).times(100).toNumber(),t[6]=l(e.sellRewardFee).times(100).toNumber(),t[7]=l(e.sellLPFee).times(100).toNumber(),t[8]=e.killBlock?l(e.killBlock).toNumber():0,t[9]=e.maxSwapAmount?b(e.maxSwapAmount,e.decimals):0n,t[10]=e.maxWalletAmount?b(e.maxWalletAmount,e.decimals):0n,n[0]=e.token.tokenAddress==="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",n[1]=e.enableManualStartTrade,n[2]=e.enableKillBlock,n[3]=e.enableSwapLimit,n[4]=e.enableWalletLimit,n[5]=e.enableChangeTax,n[6]=e.enableWhiteList,n[7]=e.canMint),console.log(e.deployerId,u,r,t,n);const L=await f.tokenCreate(e.deployerId,u,r,t,n);console.dir(L),e.txHash=L.hash,L.wait().then(async H=>{H.status===1&&o({type:"success",message:s("upChainSuccessfully")})}),_.value=!0}catch(a){if(console.log(a),a.info&&a.info.error&&a.info.error.code===4001)o(s("userCancelOperate"));else if(a.error&&a.error.message&&a.error.message=="Canceled")o(s("userCancelOperate"));else if(a.data&&a.data.code==-32e3){const d=a.data.message.match(/(\d+) want (\d+)/)[2];o(s("balanceSlow2",{chainMianCoin:i.token.chainCoinSymbol,amount:$(d)}))}else a.code==="INSUFFICIENT_FUNDS"?o(s("balanceSlow")):a.info&&a.info.error&&a.info.error.code==-32603&&a.info.error.data.message==="execution reverted: BEP40: transfer amount exceeds balance"?o(s("balanceSlow2",{chainMianCoin:A.value,amount:g.value})):a.code=="CALL_EXCEPTION"&&a.info.message.error.message=="execution reverted: BEP40: transfer amount exceeds balance"?o(s("balanceSlow2",{chainMianCoin:A.value,amount:g.value})):o(s("unkonwError"))}finally{C.value=!1,B.value=!1}}function V(){window.open(i.txNetwork+e.txHash,"_blank")}return z(()=>{console.log("create before mounted"),e.$reset(),R.push("/create/BasicInfo")}),(a,d)=>{const f=S("router-view"),c=S("van-action-bar-button"),w=S("van-action-bar"),k=S("van-popup");return I(),J("div",null,[h(f,{onCreateTokenClick:O,createTokenLoading:N.value},null,8,["createTokenLoading"]),h(k,{show:C.value,"onUpdate:show":d[0]||(d[0]=m=>C.value=m),round:"",closeable:"",class:"van-dialog van-dialog--round-button","close-on-click-overlay":!1},{default:E(()=>[p("div",te,v(a.$t("tokenCreationSoon")),1),p("div",se,[p("div",oe,[p("div",null,v(a.$t("createConfirmInfo")),1),p("div",ne,v(a.$t("serviceFeeCreation",{baseFeeAmount:g.value,baseFeeSymbol:A.value.toUpperCase()})),1)])]),h(w,{class:"van-dialog__footer"},{default:E(()=>[x.value?(I(),D(c,{key:0,type:"danger",text:a.$t("approveFirst"),class:"van-dialog__confirm",loading:T.value,onClick:U},null,8,["text","loading"])):(I(),D(c,{key:1,type:"danger",loading:B.value,color:"#3F80F7",text:a.$t("confirmAndCreate"),class:"van-dialog__confirm",onClick:K},null,8,["loading","text"]))]),_:1})]),_:1},8,["show"]),h(G,{show:_.value,"onUpdate:show":d[1]||(d[1]=m=>_.value=m),theme:"round-button",showCancelButton:!1,confirmButtonText:a.$t("enterTokenManagement"),onOnConfirm:d[2]||(d[2]=m=>Q(R).push("/"))},{default:E(()=>[p("div",null,[h(ae,{name:"createSuccess",style:{width:"48px",height:"48px"}})]),p("div",le,v(a.$t("createdSubmitted")),1),p("div",re,[Y(v(a.$t("inBrowser")),1),p("span",{class:"show",onClick:V},v(a.$t("view")),1)]),p("div",ie,v(a.$t("waitToView")),1)]),_:1},8,["show","confirmButtonText"])])}}};export{Fe as default};
